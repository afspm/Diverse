using System;
using System.Net;
using System.Net.Sockets;
using System.Threading;
using System.Text;

// State object for receiving data from remote device.  
public class SynchronousSocketClient
{
    public static string nume_sender = null;
    public static void StartClient()
    {
        // Data buffer for incoming data.  
        byte[] bytes = new byte[1024];

        // Connect to a remote device.  
        try
        {
            // Establish the remote endpoint for the socket.  
            // This example uses port 11000 on the local computer.  
            IPHostEntry ipHostInfo = Dns.GetHostEntry(Dns.GetHostName());
            IPAddress ipAddress = ipHostInfo.AddressList[0];
            IPEndPoint remoteEP = new IPEndPoint(ipAddress, 11000);

            // Create a TCP/IP  socket.  
            Socket sender = new Socket(ipAddress.AddressFamily,
                SocketType.Stream, ProtocolType.Tcp);

            // Connect the socket to the remote endpoint. Catch any errors.  
            try
            {


                sender.Connect(remoteEP);
                if (nume_sender == null) {
                    Console.WriteLine("Nume Client : ");
                    nume_sender = Console.ReadLine();
                    Console.WriteLine("Wellcome " + nume_sender + " ai fost conectat la {0} \n",
                           sender.RemoteEndPoint.ToString());
                }

                Console.WriteLine("Messajul tau:");
                    string x = Console.ReadLine();
                    // Encode the data string into a byte array.  
                    byte[] msg = Encoding.ASCII.GetBytes("010203\t" + nume_sender + "\t\0" + DateTime.Now + "\t " + x + " 0x03 \t\0");//ID user\t Nume \\\\Data Mesajul \tcod

                    // Send the data through the socket.  
                    int bytesSent = sender.Send(msg);

                    // Receive the response from the remote device.  
                    int bytesRec = sender.Receive(bytes);
                    Console.WriteLine("Echoed test = {0}",
                        Encoding.ASCII.GetString(bytes, 0, bytesRec));

                // Release the socket.  
                sender.Shutdown(SocketShutdown.Both);
                sender.Close();

            }
            catch (ArgumentNullException ane)
            {
                Console.WriteLine("ArgumentNullException : {0}", ane.ToString());
            }
            catch (SocketException se)
            {
                Console.WriteLine("SocketException : {0}", se.ToString());
            }
            catch (Exception e)
            {
                Console.WriteLine("Unexpected exception : {0}", e.ToString());
            }
           

        }
        catch (Exception e)
        {
            Console.WriteLine(e.ToString());
        }
    }

    public static int Main(String[] args)
    {
        while(true)
        StartClient();

        return 0;
    }
}
